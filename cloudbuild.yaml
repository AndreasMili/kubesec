steps:
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euxo pipefail
        docker build -t gcr.io/$PROJECT_ID/kubesec:${SHORT_SHA} .
        docker push gcr.io/${PROJECT_ID}/kubesec:${SHORT_SHA}

        if [[ "${BRANCH_NAME}" == "master" ]]; then
          docker tag gcr.io/${PROJECT_ID}/kubesec:${SHORT_SHA} gcr.io/${PROJECT_ID}/kubesec:latest
          docker push gcr.io/${PROJECT_ID}/kubesec:latest
        fi
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euxo pipefail
        if [[ "${BRANCH_NAME}" == "master" ]]; then
          gcloud beta run deploy kubesec \
            --image gcr.io/${PROJECT_ID}/kubesec:${SHORT_SHA} \
            --platform managed \
            --region us-central1
        fi

  # TODO(ajm): `make test-remote` on branch
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -euxo pipefail
        if [[ "${BRANCH_NAME}" == "master" ]]; then
          make test-remote
        fi
